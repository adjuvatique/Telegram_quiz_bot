import os
print("üîë TG_QUIZ_TOKEN =", os.getenv("8115515632:AAGa1v-VmKfdgHz2CIQVK2Hrg0GZvWd3hyQ"))

import json
import os
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters
from config import TOKEN

# –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã
with open("questions.json", encoding="utf-8") as f:
    QUESTIONS = json.load(f)

# –•—Ä–∞–Ω–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å —Å–µ–π—á–∞—Å)
user_state = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /quiz, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É.")

async def quiz(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    user_state[chat_id] = {"index": 0, "score": 0}
    await send_question(chat_id, context)

async def send_question(chat_id, context):
    state = user_state[chat_id]
    q = QUESTIONS[state["index"]]
    keyboard = ReplyKeyboardMarkup([[opt] for opt in q["options"]], one_time_keyboard=True)
    await context.bot.send_message(chat_id, f"–í–æ–ø—Ä–æ—Å {state['index']+1}: {q['question']}", reply_markup=keyboard)

async def handle_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    text = update.message.text
    state = user_state.get(chat_id)
    if not state:
        return await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ /quiz.")
    q = QUESTIONS[state["index"]]
    if text == q["answer"]:
        state["score"] += 1
        await update.message.reply_text("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
    else:
        await update.message.reply_text(f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {q['answer']}")
    state["index"] += 1
    if state["index"] < len(QUESTIONS):
        await send_question(chat_id, context)
    else:
        await update.message.reply_text(f"–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –¢–≤–æ–π —Å—á—ë—Ç: {state['score']}/{len(QUESTIONS)}")
        user_state.pop(chat_id)

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("quiz", quiz))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_answer))
    app.run_polling()

if __name__ == "__main__":
    main()

    print("üì° Quiz‚Äë–±–æ—Ç –∑–∞–ø—É—â–µ–Ω, –∂–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π‚Ä¶")


    import logging

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

