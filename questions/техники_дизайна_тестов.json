[
  {
    "question": "Что такое эквивалентное разбиение?",
    "options": [
      "Метод деления входных данных на класс эквивалентности",
      "Метод проверки граничных значений",
      "Метод проверки пользовательского интерфейса",
      "Метод оценки производительности"
    ],
    "answer": "Метод деления входных данных на класс эквивалентности",
    "difficulty": "Легкий"
  },
  {
    "question": "Что проверяет анализ граничных значений?",
    "options": [
      "Корректность работы на крайних значениях диапазона",
      "Работу приложения без данных",
      "Работу только внешнего API",
      "Совместимость с разными ОС"
    ],
    "answer": "Корректность работы на крайних значениях диапазона",
    "difficulty": "Легкий"
  },
  {
    "question": "Для чего используется таблица решений (Decision Table)?",
    "options": [
      "Для представления логики приложения в виде условий и действий",
      "Для анализа производительности",
      "Для тестирования удобства интерфейса",
      "Для расчёта покрытия кода"
    ],
    "answer": "Для представления логики приложения в виде условий и действий",
    "difficulty": "Средний"
  },
  {
    "question": "Что такое тестирование переходов состояний (State Transition)?",
    "options": [
      "Проверка переходов между состояниями системы при разных входах",
      "Проверка только первого состояния системы",
      "Проверка скорости загрузки страниц",
      "Проверка структуры базы данных"
    ],
    "answer": "Проверка переходов между состояниями системы при разных входах",
    "difficulty": "Средний"
  },
  {
    "question": "В чём суть парного (Pairwise) тестирования?",
    "options": [
      "Покрытие всех возможных пар значений параметров",
      "Покрытие только одного параметра",
      "Тестирование двух пользователей одновременно",
      "Тестирование двух систем подряд"
    ],
    "answer": "Покрытие всех возможных пар значений параметров",
    "difficulty": "Средний"
  },
  {
    "question": "Когда применяют тестирование по сценариям (Use Case Testing)?",
    "options": [
      "При имитации реальных пользовательских сценариев",
      "При тестировании нагрузки",
      "При проверке GUI на соответствие макету",
      "При автоматизации API‑запросов"
    ],
    "answer": "При имитации реальных пользовательских сценариев",
    "difficulty": "Средний"
  },
  {
    "question": "Что представляет собой метод «угадывания ошибок» (Error Guessing)?",
    "options": [
      "Использование опыта тестировщика для поиска дефектов без алгоритма",
      "Случайная генерация огромного числа данных",
      "Автоматизированная проверка всех путей в коде",
      "Метод оценки безопасности"
    ],
    "answer": "Использование опыта тестировщика для поиска дефектов без алгоритма",
    "difficulty": "Легкий"
  },
  {
    "question": "Для чего служит моделирование на основе графов «Cause‑Effect»?",
    "options": [
      "Для графического представления зависимостей между причинами и эффектами",
      "Для тестирования производительности",
      "Для работы с базами данных",
      "Для оценки юзабилити"
    ],
    "answer": "Для графического представления зависимостей между причинами и эффектами",
    "difficulty": "Сложный"
  },
  {
    "question": "Что такое ортогональное (Orthogonal Array) тестирование?",
    "options": [
      "Выбор подмножества комбинаций входных параметров для максимального покрытия",
      "Тестирование на всех возможных комбинациях",
      "Тестирование вне диапазона значений",
      "Тестирование быстродействия"
    ],
    "answer": "Выбор подмножества комбинаций входных параметров для максимального покрытия",
    "difficulty": "Сложный"
  },
  {
    "question": "Что измеряет покрытие принятия решений (Decision Coverage)?",
    "options": [
      "Долю проверенных логических веток в коде",
      "Время выполнения тестов",
      "Количество ошибок в логах",
      "Покрытие граничных значений"
    ],
    "answer": "Долю проверенных логических веток в коде",
    "difficulty": "Сложный"
  }
]
