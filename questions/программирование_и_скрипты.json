[
    {
      "question": "Какой язык программирования чаще используют для написания автотестов?",
      "options": ["Python", "JavaScript", "Java", "Ruby"],
      "answer": "Python",
      "difficulty": "Легкий"
    },
    {
      "question": "Что делает конструкция `assert` в pytest?",
      "options": [
        "Проверяет условие и выбрасывает ошибку, если оно ложно",
        "Запускает функцию как тест",
        "Создаёт отчёт об ошибках",
        "Инициализирует тестовое окружение"
      ],
      "answer": "Проверяет условие и выбрасывает ошибку, если оно ложно",
      "difficulty": "Легкий"
    },
    {
      "question": "Что такое виртуальное окружение (venv) в Python?",
      "options": [
        "Изолированная среда с собственными пакетами",
        "Инструмент для отладки кода",
        "Фреймворк для тестирования",
        "Сервер для запуска API"
      ],
      "answer": "Изолированная среда с собственными пакетами",
      "difficulty": "Средний"
    },
    {
      "question": "Как с помощью Git отменить последний коммит, не удаляя изменения из рабочего каталога?",
      "options": ["git reset --soft HEAD~1", "git revert HEAD", "git checkout .", "git clean -f"],
      "answer": "git reset --soft HEAD~1",
      "difficulty": "Средний"
    },
    {
      "question": "Что делает команда `npm install`?",
      "options": [
        "Устанавливает зависимости из package.json",
        "Запускает тесты",
        "Собирает проект",
        "Обновляет Node.js"
      ],
      "answer": "Устанавливает зависимости из package.json",
      "difficulty": "Легкий"
    },
    {
      "question": "Какой метод позволяет асинхронно читать файл в Node.js?",
      "options": [
        "fs.readFile(path, callback)",
        "fs.readFileSync(path)",
        "require(path)",
        "http.get(path)"
      ],
      "answer": "fs.readFile(path, callback)",
      "difficulty": "Средний"
    },
    {
      "question": "Что проверяет линтер (например, ESLint или flake8)?",
      "options": [
        "Соответствие кода стилевым правилам",
        "Накопление тестовых данных",
        "Производительность скриптов",
        "Нагрузку на систему"
      ],
      "answer": "Соответствие кода стилевым правилам",
      "difficulty": "Сложный"
    },
    {
      "question": "Какой формат сериализации данных обычно используют в JSON‑RPC?",
      "options": ["JSON", "XML", "YAML", "CSV"],
      "answer": "JSON",
      "difficulty": "Легкий"
    },
    {
      "question": "Что делает декоратор `@pytest.mark.parametrize`?",
      "options": [
        "Запускает один тест с разными наборами входных данных",
        "Проверяет параметры окружения",
        "Отображает отчёт о тестах",
        "Запускает тесты параллельно"
      ],
      "answer": "Запускает один тест с разными наборами входных данных",
      "difficulty": "Средний"
    },
    {
      "question": "Какой оператор используется в Python для обработки исключений?",
      "options": ["try/except", "if/else", "switch/case", "for/while"],
      "answer": "try/except",
      "difficulty": "Легкий"
    }
  ]
  